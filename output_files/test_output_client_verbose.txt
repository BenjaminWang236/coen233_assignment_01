
Sending packet: 0
DATA LENGTH: 22
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF1
segment_no=	0
length=	22
payload=	rando message number 1
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 0
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF2
received_segment_no=	0
end=	0xFFFF


Sending packet: 1
DATA LENGTH: 22
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF1
segment_no=	1
length=	22
payload=	rando message number 2
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 1
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF2
received_segment_no=	1
end=	0xFFFF


Sending packet: 2
DATA LENGTH: 22
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF1
segment_no=	2
length=	22
payload=	rando message number 3
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 2
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF2
received_segment_no=	2
end=	0xFFFF


Sending packet: 3
DATA LENGTH: 22
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF1
segment_no=	3
length=	22
payload=	rando message number 4
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 3
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF2
received_segment_no=	3
end=	0xFFFF


Sending packet: 4
DATA LENGTH: 22
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF1
segment_no=	4
length=	22
payload=	rando message number 5
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 4
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	236
packet_type=	0xFFF2
received_segment_no=	4
end=	0xFFFF


Sending packet: 0
DATA LENGTH: 50
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF1
segment_no=	0
length=	50
payload=	Starting error handling testing. Correct message 1
end=	0xFFFF
Peeked packet size: 8
Received matching ACK segment number 0
Received valid ACK packet.
Received ACK packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF2
received_segment_no=	0
end=	0xFFFF

Error handling: Case 4: Duplicate Packet check done by comparing sequence number as specified in instruction

Sending packet: 0
DATA LENGTH: 92
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF1
segment_no=	0
length=	92
payload=	Case 4: Duplicate Packet check done by comparing sequence number as specified in instruction
end=	0xFFFF
Peeked packet size: 10
Received valid REJ packet
Received REJECT packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF3
sub_code=	FFF7
received_segment_no=	0
end=	0xFFFF

Reject sub code: 0xFFF7

Error handling: Case 1: Out of Sequence segment number

Sending packet: 2
DATA LENGTH: 38
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF1
segment_no=	2
length=	38
payload=	Case 1: Out of Sequence segment number
end=	0xFFFF
Peeked packet size: 10
Received valid REJ packet
Received REJECT packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF3
sub_code=	FFF4
received_segment_no=	0
end=	0xFFFF

Reject sub code: 0xFFF4

Error handling: Case 2: Length Mismatch

Sending packet: 1
DATA LENGTH: 23
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF1
segment_no=	1
length=	23
payload=	Case 2: Length Mismatch
end=	0xFFFF
Peeked packet size: 10
Received valid REJ packet
Received REJECT packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF3
sub_code=	FFF5
received_segment_no=	0
end=	0xFFFF

Reject sub code: 0xFFF5

Error handling: Case 3: End of Packet Missing

Sending packet: 1
DATA LENGTH: 29
Data packet formatted okay
Sending DATA packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF1
segment_no=	1
length=	29
payload=	Case 3: End of Packet Missing
end=	0xFFFF
Peeked packet size: 10
Received valid REJ packet
Received REJECT packet: 
start=	0xFFFF
client_id=	123
packet_type=	0xFFF3
sub_code=	FFF6
received_segment_no=	0
end=	0xFFFF

Reject sub code: 0xFFF6

